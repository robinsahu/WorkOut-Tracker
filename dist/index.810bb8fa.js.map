{"mappings":"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","sources":["script.js"],"sourcesContent":["\"use strict\";\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + \"\").slice(-10); //in real world its very bad idea to use date we need some libraries\n  clicks = 0;\n\n  constructor(coords, distance, duration) {\n    // this.date = ...\n    // this.id = ...\n    this.coords = coords; // [lat, lng]\n    this.distance = distance; // in km\n    this.duration = duration; // in min\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n\n  click() {\n    this.clicks++;\n  }\n}\n\nclass Running extends Workout {\n  type = \"running\";\n\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = \"cycling\";\n\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration);\n    this.elevationGain = elevationGain;\n    // this.type = 'cycling';\n    this.calcSpeed();\n    this._setDescription();\n  }\n\n  calcSpeed() {\n    // km/h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n// const run1 = new Running([39, -12], 5.2, 24, 178);\n// const cycling1 = new Cycling([39, -12], 27, 95, 523);\n// console.log(run1, cycling1);\n\n// prettier-ignore\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nconst form = document.querySelector(\".form\");\nconst containerWorkouts = document.querySelector(\".workouts\");\nconst inputType = document.querySelector(\".form__input--type\");\nconst inputDistance = document.querySelector(\".form__input--distance\");\nconst inputDuration = document.querySelector(\".form__input--duration\");\nconst inputCadence = document.querySelector(\".form__input--cadence\");\nconst inputElevation = document.querySelector(\".form__input--elevation\");\n\n// let map, mapEvent;\n\nclass App {\n  #map;\n  #mapZoomLevel = 13;\n  #mapEvent;\n  #workouts = [];\n  constructor() {\n    this._getPosition();\n\n    // Get data from local storage\n    this._getLocalStorage();\n\n    form.addEventListener(\"submit\", this._newWorkout.bind(this));\n\n    inputType.addEventListener(\"change\", this._toggleElevationField);\n    containerWorkouts.addEventListener(\"click\", this._moveToPopup.bind(this));\n  }\n\n  _getPosition() {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert(\"Could not find the coordinates\");\n        }\n      );\n  }\n\n  _loadMap(position) {\n    // console.log(position);\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    // console.log(latitude, longitude);\n\n    const coords = [latitude, longitude];\n    console.log(this); //undefined so we will use bind in getcurrentposition to loadmap\n    this.#map = L.map(\"map\").setView(coords, this.#mapZoomLevel); //map is the idname of div in map function  // L is namespace which have some methods and main function that leaflet gives us as an entry point //first parameter of setview takes array of coordinate //second parameter is zoom level of map\n    // console.log(map);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\", {\n      //titlelayer basically uses tiles which uses the openstreet map which is an open source map but you can use any other map\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    //handling clicks on map\n\n    this.#map.on(\"click\", this._showForm.bind(this));\n    this.#workouts.forEach((work) => {\n      this._renderWorkoutMarker(work);\n    });\n  }\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove(\"hidden\");\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    // Empty inputs\n    inputDistance.value =\n      inputDuration.value =\n      inputCadence.value =\n      inputElevation.value =\n        \"\";\n\n    form.style.display = \"none\";\n    form.classList.add(\"hidden\");\n    setTimeout(() => (form.style.display = \"grid\"), 1000);\n  }\n\n  _newWorkout(e) {\n    e.preventDefault();\n\n    const validInputs = (...inputs) =>\n      inputs.every((inp) => Number.isFinite(inp));\n    const allPositive = (...inputs) => inputs.every((inp) => inp > 0);\n    //mapEvent is an event coming from leaflet just like e in standard javascript\n\n    // Get data from form\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let workout;\n\n    // If workout running, create running object\n    if (type === \"running\") {\n      const cadence = +inputCadence.value;\n\n      // Check if data is valid\n      if (\n        // !Number.isFinite(distance) ||\n        // !Number.isFinite(duration) ||\n        // !Number.isFinite(cadence)\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return alert(\"Inputs have to be positive numbers!\");\n\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n\n    // If workout cycling, create cycling object\n    if (type === \"cycling\") {\n      const elevation = +inputElevation.value;\n\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return alert(\"Inputs have to be positive numbers!\");\n\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n    // Add new object to workout array\n    this.#workouts.push(workout);\n\n    // Render workout on map as marker\n    this._renderWorkoutMarker(workout);\n\n    //render workout on list\n\n    this._renderWorkout(workout);\n\n    //hide form + clear input fields\n\n    this._hideForm();\n\n    //setting the local storage of workouts\n\n    this._setLocalStorage();\n\n    // console.log(mapEvent);\n  }\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords) //take array of coordinates and create the marker\n      .addTo(this.#map) //add the marker\n      // .bindPopup(\"Workout\") //create a popup and then bind it to popup\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === \"running\" ? \"🏃‍♂️\" : \"🚴‍♀️\"} ${workout.description}`\n      )\n      .openPopup();\n  }\n\n  _toggleElevationField() {\n    inputElevation.closest(\".form__row\").classList.toggle(\"form__row--hidden\");\n    inputCadence.closest(\".form__row\").classList.toggle(\"form__row--hidden\");\n  }\n\n  _renderWorkout(workout) {\n    let html = `\n      <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n        <h2 class=\"workout__title\">${workout.description}</h2>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">${\n            workout.type === \"running\" ? \"🏃‍♂️\" : \"🚴‍♀️\"\n          }</span>\n          <span class=\"workout__value\">${workout.distance}</span>\n          <span class=\"workout__unit\">km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⏱</span>\n          <span class=\"workout__value\">${workout.duration}</span>\n          <span class=\"workout__unit\">min</span>\n        </div>\n    `;\n\n    if (workout.type === \"running\")\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n          <span class=\"workout__unit\">min/km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">🦶🏼</span>\n          <span class=\"workout__value\">${workout.cadence}</span>\n          <span class=\"workout__unit\">spm</span>\n        </div>\n      </li>\n      `;\n\n    if (workout.type === \"cycling\")\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n          <span class=\"workout__unit\">km/h</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⛰</span>\n          <span class=\"workout__value\">${workout.elevationGain}</span>\n          <span class=\"workout__unit\">m</span>\n        </div>\n      </li>\n      `;\n\n    form.insertAdjacentHTML(\"afterend\", html);\n  }\n\n  _moveToPopup(e) {\n    // BUGFIX: When we click on a workout before the map has loaded, we get an error. But there is an easy fix:\n    if (!this.#map) return;\n\n    const workoutEl = e.target.closest(\".workout\");\n\n    if (!workoutEl) return;\n\n    const workout = this.#workouts.find(\n      (work) => work.id === workoutEl.dataset.id\n    );\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    });\n\n    // using the public interface\n    // workout.click();\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem(\"workouts\", JSON.stringify(this.#workouts)); //localStorage is a browser API\n    //json.stringify can be used to convert any object into string , \"workouts\" will be key\n    //this API should not be used for large data because it is blocking and will slow down the application\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem(\"workouts\"));\n\n    if (!data) return;\n\n    this.#workouts = data;\n\n    this.#workouts.forEach((work) => {\n      this._renderWorkout(work);\n    });\n  }\n  reset() {\n    localStorage.removeItem(\"workouts\");\n    location.reload(); //location is an object\n    // use app.reset in console\n  }\n}\n\nconst app = new App();\n"],"names":[],"version":3,"file":"index.810bb8fa.js.map","sourceRoot":"/__parcel_source_root/"}